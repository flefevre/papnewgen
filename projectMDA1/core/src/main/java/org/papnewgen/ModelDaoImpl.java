// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 06/27/2017 16:35:42+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.papnewgen;

/**
 * @see Model
 */
public class ModelDaoImpl
    extends ModelDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toModelsimplevo(
        Model source,
        ModelSimpleVo target)
    {
        // TODO verify behavior of toModelsimplevo
        super.toModelsimplevo(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelSimpleVo toModelsimplevo(final Model entity)
    {
        // TODO verify behavior of toModelsimplevo
        return super.toModelsimplevo(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Model loadModelFromModelSimpleVo(ModelSimpleVo modelsimplevo)
    {
        // TODO implement loadModelFromModelSimpleVo
        throw new UnsupportedOperationException("org.papnewgen.loadModelFromModelSimpleVo(ModelSimpleVo) not yet implemented.");

        /* A typical implementation looks like this:
        if (modelsimplevo.getId() == null)
        {
            return  Model.Factory.newInstance();
        }
        else
        {
            return this.load(modelsimplevo.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Model modelsimplevoToEntity(ModelSimpleVo modelsimplevo)
    {
        // TODO verify behavior of modelsimplevoToEntity
        Model entity = this.loadModelFromModelSimpleVo(modelsimplevo);
        this.modelsimplevoToEntity(modelsimplevo, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void modelsimplevoToEntity(
        ModelSimpleVo source,
        Model target,
        boolean copyIfNull)
    {
        // TODO verify behavior of modelsimplevoToEntity
        super.modelsimplevoToEntity(source, target, copyIfNull);
    }
}