// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by test/EntityCreate.vsl in andromda-ejb3-cartridge.
//
package org.papnewgo2.dm;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

//import org.andromda.dbtest.JPAJUnitAncestor;

/**
 * Autogenerated Entity constructor class for Project which creates
 * an Entity instance using dummy/default values for all properties, with a method for
 * minimal properties (only required), all properties, and an update from minimal to update the rest of the properties.
 * It assumes that Entities only have relations to other entities, so those constructors can be used.
 *
 * Autogenerated by AndroMDA ejb3\test\EntityConstructor.vsl on 06/29/2017 15:51:23
 *
 * TODO: Model Documentation for Project
 */
public class ProjectCreate
{
    /**
     * Create an Entity Project with all attributes and associations set
     * @param em EntityManager used within this transaction
     * @return Project
     */
    public static Project createEntity(EntityManager em)
    {
        Project entity = new Project();
        // Identifier attributes


        // java.lang.String java.lang.String Project.name transient=false identifier=false usingAssignedIdentifier=false many=false type=org.andromda.cartridges.ejb3.metafacades.EJB3TypeFacadeLogicImpl[java.lang.String] property=org.andromda.cartridges.ejb3.metafacades.EJB3EntityAttributeFacadeLogicImpl[Project.name]
        // Updatable property
        entity.setName("name");
        // java.lang.Long java.lang.Long Project.id transient=false identifier=true usingAssignedIdentifier=false many=false type=org.andromda.cartridges.ejb3.metafacades.EJB3TypeFacadeLogicImpl[java.lang.Long] property=org.andromda.cartridges.ejb3.metafacades.EJB3EntityAttributeFacadeLogicImpl[Project.id]

        return entity;
    }

    /**
     * Create an Entity Project with all attributes and associations set
     * @param em EntityManager used to findAll
     * @return Project
     */
    public static List<Project> findAll(EntityManager em)
    {
        //EntityManager em = JPAJUnitAncestor.createEntityManager();
        TypedQuery<Project> query = em.createNamedQuery("Project.findAll", Project.class);
        List<Project> results = query.getResultList();
        return results;
    }

    /**
     * Return a persisted Entity Project with all attributes and associations set
     * Used to set persistent association relationships in related entities.
     * @param em EntityManager used to findFirst
     * @return Project
     */
    public static Project findFirst(EntityManager em)
    {
        Project entity = null;
        //EntityManager em = JPAJUnitAncestor.createEntityManager();
        TypedQuery<Project> query = em.createNamedQuery("Project.findAll", Project.class);
        List<Project> results = query.getResultList();
        if (!results.isEmpty())
        {
            entity = results.get(0);
        }
        else
        {
            entity = createEntity(em);
            em.persist(entity);
        }
        return entity;
    }
}